h2 The Do-Not-Post (DNP) List

/ Information block
h3 Information
.block
  .block__header
    span.block__header__title About
  .block__content
    p This is a list of photographers who have asked us to place a restriction on the uploading of their photographs. These restructions can include anything from requesting that no edits of their work be allowed, to requesting that no uploads be allowed unless uploaded by the photographers themselves.
    p We ask that you please respect the wishes of photographers in regards to their photographs, and check the list before uploading. Note that just because an photographer is not listed may not mean that their photographs are ok to post, especially if they have a note at their "source" that they do not wish for their photographs to be reposted.
br

.block
  .block__header
    span.block__header__title Manage My Listings
  .block__content
    = cond do
      - not is_nil(@current_user) and Enum.any?(@linked_tags) ->
        = link "Create an entry", to: Routes.dnp_entry_path(@conn, :new)
        br
        = link "My Listings", to: Routes.dnp_entry_path(@conn, :index, mine: "1")

      - not is_nil(@current_user) ->
        ' You must have a verified user link to create and manage DNP entries.
        = link "Request a user link", to: Routes.profile_user_link_path(@conn, :new, @current_user)
        | .

      - true ->
        ' You must be logged in and have a verified user link to create and manage DNP entries.


h3 The List
.block
  - route = fn p -> Routes.dnp_entry_path(@conn, :index, p) end
  - pagination = render PhilomenaWeb.PaginationView, "_pagination.html", page: @dnp_entries, route: route, conn: @conn

  .block__header
    span.block__header__title The DNP List
    = pagination

  .block__content
    table.table
      thead
        tr
          th Tag
          th Restriction
          th Conditions
          = if @status_column do
            th Status
            th Created
          th Options
      tbody
        = for {body, entry} <- @dnp_entries do
          tr
            td
              = render PhilomenaWeb.TagView, "_tag.html", tag: entry.tag, conn: @conn

            td
              = entry.dnp_type

            td
              == body

            = if @status_column do
              td
                = pretty_state(entry)

              td
                = pretty_time(entry.created_at)

            td
              = link "More Info", to: Routes.dnp_entry_path(@conn, :show, entry)

  .block__header
    = pagination
