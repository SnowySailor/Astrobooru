h1 Cloud Backups

p
  ' Here you can manage your cloud backups (uploading, downloading, and deleting). After uploading, we strongly recommend that you
  b
    ' do not
  ' delete your data from your computer! We recommend using the 3-2-1 strategy for backing up data:
  ol(reversed)
    li
      ' copies or versions
    li
      ' different types of media
    li
      ' off-site backup
  ' Please see
  a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/" target="_blank"
    ' this blog by Backblaze
  ' (our storage provider) if you're interested in learning more.
  br
  br
  ' To back up your data, we suggest creating a ZIP file (or similar) and uploading that instead of uploading each file individually. On Windows, put all of your files into a folder, right click the folder, and select
  code Send to > Compressed (zipped) folder
  ' . On Mac OS, right click the folder and select
  code Compress
  ' . Once your ZIP file is uploaded, you may delete that file from your computer (zipping will make a copy and will not affect the original data). Make sure to keep the original data!
  br
  br
  ' The larger the ZIP file is, the longer it will take to upload. We support uploading files up to
  b
    ' 30GB
  ' in size. We recommend uploading data for 1 object or 1 night as 1 ZIP file. This makes it easier to only download the data you need. Each file can be downloaded a
  b
    ' maximum of 3 times per month!
  ' The Cloud Backup service is meant to store data in case of an accident or data loss locally, so you should not have to download your data from here very often.

= form_for @conn, Routes.data_backup_path(@conn, :create), [id: "data-backup-form", method: "post", multipart: true, data: [remote: true]], fn f ->
  h4 Select a file to backup
  .image-other
    #js-image-upload-previews
    p Upload a file from your computer
    .field
      = file_input f, :backup, id: "backup_file_input", class: "input js-scraper"

  h4 About this backup
  .field
    = label f, :description, "Short description of this file (what it contains)"
    = text_input f, :description, id: "backup_description", class: "input input--wide js-image-input", placeholder: "Description"

  .actions
    = submit "Upload", class: "button", autocomplete: "off", data: [disable_with: "Uploading..."]

= if Enum.any?(@data_backups) do
  br
  h3 Your Backups
  
  .block__content
    table.table#data-backup-table
      thead
        tr
          td Name
          td Description
          td Size
          td Upload Date
          td
      tbody
        = for backup <- @data_backups do
          tr
            td
              a(href=Routes.data_backup_path(@conn, :show, backup.id) download)
                = backup.file_name
            td
              = backup.description
            td
              = Size.humanize!(backup.disk_size)
            td
              = backup.create_date
            td
              = link "Delete", to: Routes.data_backup_path(@conn, :delete, backup.id), data: [confirm: "Are you really, really sure?", method: "delete"]
